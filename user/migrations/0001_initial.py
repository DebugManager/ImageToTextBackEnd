# Generated by Django 4.2.6 on 2023-10-30 09:06

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('main', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('type', models.CharField(default='customer', max_length=50)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('address_line1', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=50)),
                ('zip_code', models.IntegerField(null=True)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('joined', models.DateTimeField(default=datetime.datetime(2023, 10, 30, 9, 6, 54, 723849, tzinfo=datetime.timezone.utc))),
                ('company', models.ManyToManyField(blank=True, null=True, to='main.company')),
                ('current_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.plan')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'permissions': [('view', 'Can view specific page'), ('edit', 'Can edit content'), ('comment', 'Can comment'), ('create_new', 'Can create new user')],
            },
        ),
    ]
